kube-prometheus-stack:
  # NOTE: These must be set manually to the control plane IP addresses
  #kubeEtcd:
  #  endpoints:
  #    - x.y.z.a
  #    - x.y.z.b
  #    - x.y.z.c
  kubeControllerManager:
    service:
      selector:
        k8s-app: kube-controller-manager
  kubeScheduler:
    service:
      selector:
        k8s-app: kube-scheduler
  alertmanager:
    alertmanagerspec:
      storage:
        volumeClaimTemplate:
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
  prometheus:
    prometheusSpec:
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 150Gi
  grafana:
    grafana.ini:
      auth:
        # testing auth configurations currently
        disable_login_form: false
        disable_signout_menu: false
      auth.basic:
        enabled: true
      auth.anonymous:
        enabled: true
    # Allow Omni Workload Proxying for this service
      security:
        allow_embedding: true
    service:
      annotations:
        omni-kube-service-exposer.sidero.dev/port: "50082"
        omni-kube-service-exposer.sidero.dev/label: Grafana

additionalPrometheusRulesMap:
#  rule-name:
#    groups:
#    - name: my_group
#      rules:
#      - record: my_record
#        expr: 100 * my_record
  rule-name: alert-configurations
    groups:
    - name: node.rules
      interval: 30s
      rules:
      - alert: NodeHighCPUUsage
        expr: 100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Node CPU usage is high"
          description: "Node {{ $labels.instance }} CPU usage is above 80% (current value: {{ $value }}%)"

      - alert: NodeHighMemoryUsage
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Node Memory usage is high"
          description: "Node {{ $labels.instance }} Memory usage is above 80% (current value: {{ $value }}%)"

    - name: pod.rules
      interval: 1m
      rules:
      - alert: PodCrashLoopBackOff
        expr: kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff"} > 0
        for: 10m
        labels:
          severity: critical
        annotations:
          summary: "Pod in CrashLoopBackOff state"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is in CrashLoopBackOff state"

      - alert: PodNotReady
        expr: kube_pod_status_phase{phase="Running"} * on(namespace, pod) group_left() kube_pod_status_ready{condition="true"} == 0
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Pod Not Ready"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is not ready"

    - name: cluster.rules
      interval: 1m
      rules:
      - alert: APIServerDown
        expr: absent(up{job="apiserver"} == 1)
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "API Server is down"
          description: "The Kubernetes API server is not responding"

      - alert: HighDiskUsage
        expr: (node_filesystem_size_bytes{fstype!="tmpfs",fstype!="overlay"} - node_filesystem_avail_bytes{fstype!="tmpfs",fstype!="overlay"}) / node_filesystem_size_bytes{fstype!="tmpfs",fstype!="overlay"} * 100 > 85
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High Disk Usage"
          description: "Disk usage on {{ $labels.instance }} is above 85%"

    - name: application.rules
      interval: 1m
      rules:
      - alert: HighRequestLatency
        expr: histogram_quantile(0.99, sum(rate(http_request_duration_seconds_bucket[5m])) by (le)) > 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High Request Latency"
          description: "99th percentile request latency is above 1 second"

      - alert: HighErrorRate
        expr: sum(rate(http_requests_total{status=~"5.."}[5m])) by (job) / sum(rate(http_requests_total[5m])) by (job) > 0.05
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High Error Rate"
          description: "High error rate detected for {{ $labels.job }} (current value: {{ $value }})"

    - name: persistentvolume.rules
      interval: 1m
      rules:
      - alert: PersistentVolumeFull
        expr: (kubelet_volume_stats_used_bytes / kubelet_volume_stats_capacity_bytes) * 100 > 90
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Persistent Volume Full"
          description: "Persistent volume usage is above 90% (current value: {{ $value }}%)"