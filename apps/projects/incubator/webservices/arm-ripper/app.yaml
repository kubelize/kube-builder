apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: arm-ripper
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: arm-ripper
  source:
    repoURL: https://kubelize.github.io/helm-charts/
    targetRevision: 0.1.1
    chart: arm-ripper
    helm:
      parameters: []
      values: |
        # Default values for arm-ripper.
        # This is a YAML-formatted file.
        # Declare variables to be passed into your templates.

        replicaCount: 1

        image:
          repository: 1337server/automatic-ripping-machine
          pullPolicy: IfNotPresent
          # Overrides the image tag whose default is the chart appVersion.
          tag: "2.6.67"

        imagePullSecrets: []
        nameOverride: ""
        fullnameOverride: ""

        storage:
          name: arm-data-pvc
          accessMode: "ReadWriteOnce"
          storageClassName: "kubevirt-hostpath-provisioner"
          capacity: "100Gi"
          annotations:
            kubevirt.io/provisionOnNode: "dev-svc-020324"

        hostpath:
          enabled: false
          path: ""

        volumes:
        - name: arm-data
          persistentVolumeClaim:
            claimName: arm-data-pvc
        - name: sr0
          hostPath:
            path: /dev/sr0

        volumeMounts:
        - name: sr0
          mountPath: /dev/sr0
        - name: arm-data
          mountPath: /home/arm
          
        serviceAccount:
          # Specifies whether a service account should be created
          create: true
          # Automatically mount a ServiceAccount's API credentials?
          automount: true
          # Annotations to add to the service account
          annotations: {}
          # The name of the service account to use.
          # If not set and create is true, a name is generated using the fullname template
          name: ""

        podAnnotations: {}
        podLabels: {}

        podSecurityContext: {}
          # fsGroup: 2000

        securityContext:
          # capabilities:
          #   drop:
          #   - ALL
          # readOnlyRootFilesystem: true
          # runAsNonRoot: true
          # runAsUser: 1001
          # runAsGroup: 1001
          privileged: true

        service:
          type: NodePort
          port: 8080

        ingress:
          enabled: false
          className: ""
          annotations: {}
            # kubernetes.io/ingress.class: nginx
            # kubernetes.io/tls-acme: "true"
          hosts:
            - host: chart-example.local
              paths:
                - path: /
                  pathType: ImplementationSpecific
          tls: []
          #  - secretName: chart-example-tls
          #    hosts:
          #      - chart-example.local

        resources: {}
          # We usually recommend not to specify default resources and to leave this as a conscious
          # choice for the user. This also increases chances charts run on environments with little
          # resources, such as Minikube. If you do want to specify resources, uncomment the following
          # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          # requests:
          #   cpu: 100m
          #   memory: 128Mi

        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http

        autoscaling:
          enabled: false
          minReplicas: 1
          maxReplicas: 100
          targetCPUUtilizationPercentage: 80
          # targetMemoryUtilizationPercentage: 80

        nodeSelector:
          level: svc

        tolerations:
          - key: "stage"
            operator: "Equal"
            value: "dev"
            effect: "NoSchedule"

        affinity: {}