apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kubelize-nextra
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: kubelize-nextra
  source:
    repoURL: https://kubelize.github.io/helm-charts/
    targetRevision: 0.1.1
    chart: nextra
    helm:
      parameters: []
      values: |
        # Default values for nextra.
        # This is a YAML-formatted file.
        # Declare variables to be passed into your templates.

        replicaCount: 1

        image:
          repository: kubelize/nextra
          pullPolicy: IfNotPresent
          # Overrides the image tag whose default is the chart appVersion.
          tag: "0.0.2"

        imagePullSecrets: []
        nameOverride: ""
        fullnameOverride: ""

        storage:
          enabled: false
          name: kubelize-nextra
          accessMode: "ReadWriteOnce"
          storageClassName: "kubevirt-hostpath-provisioner"
          capacity: "20Gi"
          annotations:
            kubevirt.io/provisionOnNode: "prod-svc-270224"

        runserver:
          # remove the bottom two lines and uncomment npm --prefix $DST_PATH run dev to start in dev mode
          config: |
            #!/bin/bash
            GIT_URL="https://github.com/kubelize/kubelize.com.git"
            DST_PATH="/home/nextra/git/kubelize.com"
            git clone $GIT_URL $DST_PATH
            echo "syncing $DST_PATH to destination"
            npm i --prefix $DST_PATH next react react-dom nextra nextra-theme-docs
            CI=true npx pnpm --prefix $DST_PATH install
            # npm --prefix $DST_PATH run dev
            npm --prefix $DST_PATH run build
            npm --prefix $DST_PATH run start

        serviceAccount:
          # Specifies whether a service account should be created
          create: true
          # Automatically mount a ServiceAccount's API credentials?
          automount: true
          # Annotations to add to the service account
          annotations: {}
          # The name of the service account to use.
          # If not set and create is true, a name is generated using the fullname template
          name: ""

        podAnnotations: {}
        podLabels: {}

        podSecurityContext: {}
          # fsGroup: 2000

        securityContext: {}
          # capabilities:
          #   drop:
          #   - ALL
          # readOnlyRootFilesystem: true
          # runAsNonRoot: true
          # runAsUser: 1000

        service:
          type: ClusterIP
          port: 3000

        ingress:
          enabled: true
          className: "nginx"
          annotations:
            # kubernetes.io/ingress.class: nginx
            # kubernetes.io/tls-acme: "true"
            cert-manager.io/cluster-issuer: letsencrypt-prod-nginx
          hosts:
            - host: docs.kubelize.com
              paths:
                - path: /
                  pathType: ImplementationSpecific
          tls:
           - secretName: kubelize-nextra-tls
             hosts:
               - docs.kubelize.com

        resources: {}
          # We usually recommend not to specify default resources and to leave this as a conscious
          # choice for the user. This also increases chances charts run on environments with little
          # resources, such as Minikube. If you do want to specify resources, uncomment the following
          # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          # requests:
          #   cpu: 100m
          #   memory: 128Mi

        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 90
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 90

        autoscaling:
          enabled: false
          minReplicas: 1
          maxReplicas: 100
          targetCPUUtilizationPercentage: 80
          # targetMemoryUtilizationPercentage: 80

        # Additional volumes on the output Deployment definition.
        volumes:
          - name: run-cm
            configMap:
              name: run-server

        # Additional volumeMounts on the output Deployment definition.
        volumeMounts:
          - mountPath: /usr/local/bin/run_server.sh
            subPath: run_server.sh
            name: run-cm

        nodeSelector: {}

        tolerations: []

        affinity: {}
